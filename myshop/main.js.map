{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/components/admin-orders/admin-orders.component.css","webpack:///./src/app/admin/components/admin-orders/admin-orders.component.html","webpack:///./src/app/admin/components/admin-orders/admin-orders.component.ts","webpack:///./src/app/admin/components/admin-products/admin-products.component.css","webpack:///./src/app/admin/components/admin-products/admin-products.component.html","webpack:///./src/app/admin/components/admin-products/admin-products.component.ts","webpack:///./src/app/admin/components/product-form/product-form.component.css","webpack:///./src/app/admin/components/product-form/product-form.component.html","webpack:///./src/app/admin/components/product-form/product-form.component.ts","webpack:///./src/app/admin/services/admin-auth-guard.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/components/bs-navbar/bs-navbar.component.css","webpack:///./src/app/core/components/bs-navbar/bs-navbar.component.html","webpack:///./src/app/core/components/bs-navbar/bs-navbar.component.ts","webpack:///./src/app/core/components/home/home.component.css","webpack:///./src/app/core/components/home/home.component.html","webpack:///./src/app/core/components/home/home.component.ts","webpack:///./src/app/core/components/login/login.component.css","webpack:///./src/app/core/components/login/login.component.html","webpack:///./src/app/core/components/login/login.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/shared/components/product-card/product-card.component.css","webpack:///./src/app/shared/components/product-card/product-card.component.html","webpack:///./src/app/shared/components/product-card/product-card.component.ts","webpack:///./src/app/shared/components/product-quantity/product-quantity.component.css","webpack:///./src/app/shared/components/product-quantity/product-quantity.component.html","webpack:///./src/app/shared/components/product-quantity/product-quantity.component.ts","webpack:///./src/app/shared/models/order.ts","webpack:///./src/app/shared/models/shopping-cart-item.ts","webpack:///./src/app/shared/models/shopping-cart.ts","webpack:///./src/app/shared/services/auth-guard.service.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/category.service.ts","webpack:///./src/app/shared/services/order.service.ts","webpack:///./src/app/shared/services/product.service.ts","webpack:///./src/app/shared/services/shopping-cart.service.ts","webpack:///./src/app/shared/services/user.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shopping/components/check-out/check-out.component.css","webpack:///./src/app/shopping/components/check-out/check-out.component.html","webpack:///./src/app/shopping/components/check-out/check-out.component.ts","webpack:///./src/app/shopping/components/my-orders/my-orders.component.css","webpack:///./src/app/shopping/components/my-orders/my-orders.component.html","webpack:///./src/app/shopping/components/my-orders/my-orders.component.ts","webpack:///./src/app/shopping/components/order-success/order-success.component.css","webpack:///./src/app/shopping/components/order-success/order-success.component.html","webpack:///./src/app/shopping/components/order-success/order-success.component.ts","webpack:///./src/app/shopping/components/products/product-filter/product-filter.component.css","webpack:///./src/app/shopping/components/products/product-filter/product-filter.component.html","webpack:///./src/app/shopping/components/products/product-filter/product-filter.component.ts","webpack:///./src/app/shopping/components/products/products.component.css","webpack:///./src/app/shopping/components/products/products.component.html","webpack:///./src/app/shopping/components/products/products.component.ts","webpack:///./src/app/shopping/components/shipping-form/shipping-form.component.css","webpack:///./src/app/shopping/components/shipping-form/shipping-form.component.html","webpack:///./src/app/shopping/components/shipping-form/shipping-form.component.ts","webpack:///./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.css","webpack:///./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.html","webpack:///./src/app/shopping/components/shopping-cart-summary/shopping-cart-summary.component.ts","webpack:///./src/app/shopping/components/shopping-cart/shopping-cart.component.css","webpack:///./src/app/shopping/components/shopping-cart/shopping-cart.component.html","webpack:///./src/app/shopping/components/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/shopping/shopping.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule } from '@angular/router';\nimport { DataTableModule } from 'angular5-data-table';\nimport { SharedModule } from './../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { AdminAuthGuard } from './services/admin-auth-guard.service';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminProductsComponent } from './components/admin-products/admin-products.component';\nimport { AdminOrdersComponent } from './components/admin-orders/admin-orders.component';\nimport { AuthGuard } from 'src/app/shared/services/auth-guard.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    DataTableModule,\n    RouterModule.forChild([\n      { \n        path: 'admin/products/new', \n        component: ProductFormComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      },\n      { \n        path: 'admin/products/:id', \n        component: ProductFormComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      },\n      { \n        path: 'admin/products', \n        component: AdminProductsComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      },\n      { \n        path: 'admin/orders', \n        component: AdminOrdersComponent, \n        canActivate: [AuthGuard, AdminAuthGuard] \n      }\n    ])\n  ],\n  declarations: [\n    AdminProductsComponent,\n    AdminOrdersComponent,\n    ProductFormComponent,\n  ],\n  providers: [\n    AdminAuthGuard,\n  ]\n})\nexport class AdminModule { }\n","module.exports = \"\"","module.exports = \"<h1>Orders</h1>\\n<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th>Customer</th>\\n      <th>Date</th>\\n      <th></th>\\n    </tr>\\n  </thead> \\n  <tbody>\\n    <tr *ngFor=\\\"let order of orders$ | async\\\">\\n      <td>{{ order.shipping.name }}</td>\\n      <td>{{ order.datePlaced | date}}</td>\\n      <td>\\n        <a href=\\\"#\\\">View (inactive)</a>\\n      </td>\\n    </tr>\\n  </tbody> \\n</table>\"","import { OrderService } from 'src/app/shared/services/order.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-orders',\n  templateUrl: './admin-orders.component.html',\n  styleUrls: ['./admin-orders.component.css']\n})\nexport class AdminOrdersComponent implements OnInit {\n  orders$;\n\n  constructor(private orderService: OrderService) { \n    this.orders$ = orderService.getOrders();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\r\\n    <a routerLink=\\\"/admin/products/new\\\" class=\\\"btn btn-primary\\\">New Product</a>\\r\\n</p>\\r\\n<p>\\r\\n    <input \\r\\n    #query\\r\\n    (keyup)=\\\"filter(query.value)\\\"\\r\\n    type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\r\\n</p>\\r\\n\\r\\n<data-table\\r\\n    [items]=\\\"items\\\"\\r\\n    [itemCount]=\\\"itemCount\\\"\\r\\n    (reload) = \\\"reloadItems($event)\\\"\\r\\n>\\r\\n    <data-table-column\\r\\n        [property]=\\\"'title'\\\"\\r\\n        [header]=\\\"'Title'\\\"\\r\\n        [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\"\\r\\n    >\\r\\n    </data-table-column>\\r\\n\\r\\n    <data-table-column\\r\\n        [property]=\\\"'price'\\\"\\r\\n        [header]=\\\"'Price'\\\"\\r\\n        [sortable]=\\\"true\\\"\\r\\n        [resizable]=\\\"true\\\"\\r\\n    >\\r\\n    <ng-template #dataTableCell let-item = \\\"item\\\">\\r\\n        {{ item.price | currency:'SGD':symbol}}\\r\\n    </ng-template>\\r\\n    </data-table-column>\\r\\n\\r\\n    <data-table-column\\r\\n        [property]=\\\"'key'\\\"\\r\\n    >\\r\\n    <ng-template #dataTableCell let-item = \\\"item\\\">\\r\\n        <a [routerLink]=\\\"['/admin/products/', item.key]\\\">Edit</a>\\r\\n    </ng-template>\\r\\n    </data-table-column>\\r\\n\\r\\n</data-table>\\r\\n\\r\\n<!-- <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Title</th>\\r\\n            <th>Price</th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n            <tr *ngFor=\\\"let p of filteredProducts\\\">\\r\\n            <td>{{p.title}}</td>\\r\\n            <td>{{p.price}}</td>\\r\\n            <td>\\r\\n                <a [routerLink]=\\\"['/admin/products/', p.key]\\\">Edit</a>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table> -->\\r\\n\"","import { query } from '@angular/core/src/render3/query';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { Product } from 'src/app/shared/models/product';\nimport { DataTableResource } from 'angular5-data-table';\n\n@Component({\n  selector: 'app-admin-products',\n  templateUrl: './admin-products.component.html',\n  styleUrls: ['./admin-products.component.css']\n})\nexport class AdminProductsComponent implements OnInit, OnDestroy {\n  products: Product[];\n  subscription: Subscription;\n  tableResource: DataTableResource<Product>;\n  items: Product[] = [];\n  itemCount: number;\n\n  constructor(private productService: ProductService) {\n    this.subscription = this.productService.getAll()\n    .subscribe(products => {\n        const temp: any[] = products;\n        this.products = temp; \n        this.initilizaTable(this.products);\n        console.log(this.products);\n      });\n  }\n\n  private initilizaTable(products: Product[]) {\n    this.tableResource = new DataTableResource(products);\n    this.tableResource.query({ offset: 0})\n    .then(items => this.items = items);\n    this.tableResource.count()\n    .then(count => this.itemCount = count);\n  }\n\n  reloadItems(params) {\n    if (!this.tableResource) { return; }\n    this.tableResource.query(params)\n    .then(items => this.items = items);\n  }\n\n  // tslint:disable-next-line:no-shadowed-variable\n  filter(query: string) {\n    const filteredProducts = (query) ?\n      this.products.filter(p => p.title.toLowerCase().includes(query.toLowerCase())) : \n      this.products;\n\n    console.log(filteredProducts);\n    this.initilizaTable(filteredProducts);\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n      <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"save(f.value)\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"title\\\">Title</label>\\n            <input #title=\\\"ngModel\\\" [(ngModel)]=\\\"product.title\\\" name=\\\"title\\\" id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"title.touched && title.invalid\\\">\\n              Title is required.\\n            </div>\\n          </div>\\n        \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"price\\\">Price</label>\\n              <div class=\\\"input-group\\\">\\n                  <span class=\\\"input-group-text\\\">$</span>\\n                  <input #price=\\\"ngModel\\\" [(ngModel)]=\\\"product.price\\\" name=\\\"price\\\" id=\\\"price\\\" type=\\\"number\\\" class=\\\"form-control\\\" required [min]=\\\"0\\\">\\n              </div>\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"price.touched && price.invalid\\\">\\n                <div *ngIf=\\\"price.errors.required\\\">Price is required.</div>\\n                <div *ngIf=\\\"price.errors.min\\\">Price should be 0 or higher.</div>\\n              </div>\\n          </div>\\n        \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"category\\\">Category</label>\\n              <select #category=\\\"ngModel\\\" [(ngModel)]=\\\"product.category\\\" name=\\\"category\\\" id=\\\"category\\\" class=\\\"form-control\\\" required>\\n                <option value=\\\"\\\"></option>\\n                <option *ngFor=\\\"let c of categories$ | async\\\" [value]=\\\"c.key\\\">\\n                  {{ c.name }}\\n                </option>\\n              </select>\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"category.touched && category.invalid\\\">\\n                  Category is required.\\n              </div>\\n          </div>\\n        \\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"imageUrl\\\">ImageUrl</label>\\n              <input #imageUrl=\\\"ngModel\\\" [(ngModel)]=\\\"product.imageUrl\\\" name=\\\"imageUrl\\\" id=\\\"imageUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" required url>\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"imageUrl.touched && imageUrl.invalid\\\">\\n                <div *ngIf=\\\"imageUrl.errors.required\\\">ImageUrl is required.</div>\\n                <div *ngIf=\\\"imageUrl.errors.url\\\">Please Enter a valid URL.</div>\\n                  \\n              </div>\\n          </div>\\n        \\n          <button class=\\\"btn btn-primary\\\">Save</button>\\n          <button type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n        \\n        </form>\\n  </div>\\n  <div class=\\\"col-md-6\\\">\\n    <product-card [product]=\\\"product\\\" [show-actions]=\\\"false\\\"></product-card>\\n  </div>\\n</div>\\n\\n\"","import { Router, ActivatedRoute } from '@angular/router';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { CategoryService } from 'src/app/shared/services/category.service';\nimport { Component, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  categories$;\n  product = {};\n  id;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private categoryService: CategoryService,\n    private productService: ProductService) {\n\n    this.categories$ = categoryService.getAll();\n    // categoryService.getCategories()\n    // .subscribe(x => {\n    //   this.categories$ = x;\n    //   console.log(this.categories$);\n    // });\n\n    this.id = this.route.snapshot.paramMap.get('id');\n\n    if (this.id) {\n      this.productService.get(this.id).valueChanges().pipe(take(1))\n      .subscribe(p => this.product = p);\n    }\n  }\n\n  save(product) {\n    // console.log(product);\n    if (this.id) {\n      this.productService.update(this.id, product);\n    } else {\n      this.productService.creat(product);\n    }\n    \n    this.router.navigate(['/admin/products']);\n  }\n\n  delete() {\n    if (!confirm('Are you sure you want to delete this product?')) { return; } \n\n    console.log(this.id);\n    this.productService.detele(this.id);\n    this.router.navigate(['/admin/products']);    \n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { UserService } from 'src/app/shared/services/user.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminAuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private userService: UserService) { }\n\n  canActivate(): Observable<boolean> {\n    return this.auth.appUser$.pipe(\n      map( appUser => appUser.isAdmin )\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<bs-navbar></bs-navbar>\\n<main role=\\\"main\\\" class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</main><!-- /.container -->\\n\\n\"","import { UserService } from 'src/app/shared/services/user.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private userService: UserService, private auth: AuthService, router: Router) {\n    auth.user$.subscribe(user => {\n      if (user) {\n        userService.save(user);\n\n        const returnUrl = localStorage.getItem('returnUrl');\n        if (returnUrl) {\n          localStorage.removeItem('returnUrl');\n          router.navigateByUrl(returnUrl);\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n    // this.auth.logout();\n  }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTableModule } from 'angular5-data-table';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { CustomFormsModule } from 'ng2-validation';\n\nimport { environment } from './../environments/environment';\nimport { AdminModule } from './admin/admin.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './core/components/login/login.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { ProductsComponent } from './shopping/components/products/products.component';\nimport { ShoppingModule } from './shopping/shopping.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,    \n  ],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    AdminModule,\n    ShoppingModule,\n    CoreModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    FormsModule,\n    CustomFormsModule,\n    DataTableModule.forRoot(),\n    NgbModule.forRoot(),\n    RouterModule.forRoot([\n      { path: '', component: ProductsComponent },\n      { path: 'login', component: LoginComponent },\n    ])\n  ],\n  providers: [\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\r\\n.dropdown-toggle {\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-light bg-light fixed-top\\\">\\n  <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n        <i class=\\\"fas fa-box-open\\\"></i>\\n      </a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n    \\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/shopping-cart\\\">\\n              <i class=\\\"fas fa-shopping-cart\\\"></i>\\n              <span class=\\\"badge badge-warning badge-pill\\\">\\n                {{shoppingCartItemCount}}\\n              </span>\\n            </a>\\n          </li>\\n        </ul>\\n\\n        <ul class=\\\"navbar-nav\\\">\\n            <ng-template #anonymousUser>\\n              <li class=\\\"nav-item\\\">\\n                  <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n              </li>\\n            </ng-template>\\n            \\n            <li ngbDropdown *ngIf=\\\"appUser; else anonymousUser\\\" class=\\\"nav-item dropdown\\\">\\n              <a ngbDropdownToggle class=\\\"nav-link dropdown-toggle\\\" id=\\\"dropdown01\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                {{ appUser.name }}\\n              </a>\\n              <div ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown01\\\">\\n                <a class=\\\"dropdown-item\\\" routerLink=\\\"/my/orders\\\">My Orders</a>\\n                <ng-container *ngIf=\\\"appUser.isAdmin\\\">\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"/admin/orders\\\">Manage Orders</a>\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"/admin/products\\\">Manage Products</a>\\n                </ng-container>\\n                <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Log Out</a>\\n              </div>\\n            </li>\\n        </ul>\\n      </div>\\n  </div>\\n</nav>\"","import { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { ShoppingCartComponent } from '../../../shopping/components/shopping-cart/shopping-cart.component';\nimport { AppUser } from 'src/app/shared/models/app-user';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'bs-navbar',\n  templateUrl: './bs-navbar.component.html',\n  styleUrls: ['./bs-navbar.component.css']\n})\nexport class BsNavbarComponent  implements OnInit {\n  appUser: AppUser;\n  shoppingCartItemCount: number;\n\n  constructor(private auth: AuthService, private shoppingCartService: ShoppingCartService) {\n  }\n\n  logout() {\n    this.auth.logout();\n  }\n\n  async ngOnInit() {\n    this.auth.appUser$.subscribe(appuser => this.appUser = appuser);\n    const cart$ = await this.shoppingCartService.getCart();\n    cart$.subscribe( temp => {\n      // let cart: ShoppingCart;\n      // tslint:disable-next-line:prefer-const\n      // let cart: ShoppingCart = new ShoppingCart(null);\n      let data: any;\n      // data = temp.payload.child('/items').val();\n      // data = temp.payload.val();\n      // cart = data;\n      // console.log(cart);\n      // console.log(cart.items);\n\n\n      // this.shoppingCartItemCount = 0;\n      // // tslint:disable-next-line:forin prefer-const\n      // for ( let productId in cart.items) {\n      //   this.shoppingCartItemCount += cart.items[productId].quantity;\n      //   // console.log(cart.items[productId]);\n      //   console.log('productId', productId);\n      //   console.log(cart.items);\n      // }\n\n      data = temp.payload.child('/items').val();\n      // data = temp.payload.val();\n      // tslint:disable-next-line:prefer-const\n      let cart = new ShoppingCart(data);\n      // console.log(cart.items);\n      this.shoppingCartItemCount = cart.totalItemsCount;\n      \n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<button\\n  (click)=\\\"login()\\\"\\n  class=\\\"btn btn-primary\\\">Login with Google</button>\"","import { AuthService } from 'src/app/shared/services/auth.service';\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  constructor(private auth: AuthService) { }\n\n  login() {\n    // this.auth.logout();\n    this.auth.login();\n  }\n\n}\n","import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsNavbarComponent } from './components/bs-navbar/bs-navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([]),\n    NgbModule,\n  ],\n  declarations: [\n    BsNavbarComponent,\n    HomeComponent,\n    LoginComponent,\n  ],\n  exports: [\n    BsNavbarComponent,\n  ]\n})\nexport class CoreModule { }\n","module.exports = \"\\r\\n.card-footer {\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.card {\\r\\n    margin-bottom: 30px;\\r\\n}\"","module.exports = \"\\n\\n<div *ngIf=\\\"product.title\\\" class=\\\"card\\\">\\n  <img *ngIf=\\\"product.imageUrl\\\" class=\\\"card-img-top\\\" [src]=\\\"product.imageUrl\\\" alt=\\\"{{ product.title }}\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{product.title}}</h5>\\n    <p class=\\\"card-text\\\"> {{product.price | currency:'SGD':symbol}}</p>\\n  </div>\\n  <div *ngIf=\\\"showActions\\\" class=\\\"card-footer\\\">\\n    <button \\n      *ngIf=\\\"getQuantity() === 0; else updateQuantity\\\"\\n      (click)=\\\"addToCart()\\\" \\n      class=\\\"btn btn-secondary btn-block\\\">Add to Cart</button>\\n    <ng-template #updateQuantity>\\n      <!-- <div class=\\\"row no-gutters\\\">\\n        <div class=\\\"col-2\\\">\\n          <button\\n            (click)=\\\"removeFromCart()\\\" \\n            class=\\\"btn btn-secondary btn-block\\\">-</button>\\n        </div>\\n        <div class=\\\"col text-center\\\">{{ getQuantity() }} in cart </div>\\n        <div class=\\\"col-2\\\">\\n            <button \\n              (click)=\\\"addToCart()\\\"\\n              class=\\\"btn btn-secondary btn-block\\\">+</button>\\n        </div>\\n      </div> -->\\n      <product-quantity [shopping-cart]=\\\"shoppingCart\\\" [product]=\\\"product\\\"></product-quantity>\\n    </ng-template> \\n  </div>\\n</div>\\n\"","import { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { Product } from 'src/app/shared/models/product';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent {\n  @Input('product') product: Product;\n  @Input('show-actions') showActions = true;\n  @Input('shopping-cart') shoppingCart: ShoppingCart;\n\n  constructor(private cartService: ShoppingCartService) { }\n\n  addToCart() {\n    // console.log(this.product);\n    this.cartService.addToCart(this.product);\n  }\n\n  // removeFromCart() {\n  //   this.cartService.removeFromCart(this.product);\n  // }\n\n  getQuantity() {\n    if (!this.shoppingCart) { return 0; }\n    // console.log(this.shoppingCart);\n    const item = this.shoppingCart.itemsMap[this.product.key];\n    return item ? item.quantity : 0;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div \\n  class=\\\"row no-gutters\\\">\\n  <div class=\\\"col-2\\\">\\n    <button\\n      (click)=\\\"removeFromCart()\\\" \\n      class=\\\"btn btn-secondary btn-block\\\">-</button>\\n  </div>\\n  <div class=\\\"col text-center\\\">\\n    {{ getQuantity() }} in cart \\n  </div>\\n  <div class=\\\"col-2\\\">\\n      <button \\n        (click)=\\\"addToCart()\\\"\\n        class=\\\"btn btn-secondary btn-block\\\">+</button>\\n  </div>\\n</div>\\n\"","import { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { Product } from 'src/app/shared/models/product';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'product-quantity',\n  templateUrl: './product-quantity.component.html',\n  styleUrls: ['./product-quantity.component.css']\n})\nexport class ProductQuantityComponent {\n  @Input('product') product: Product;\n  @Input('shopping-cart') shoppingCart: ShoppingCart;\n\n  constructor(private cartService: ShoppingCartService) { }\n\n  addToCart() {\n    this.cartService.addToCart(this.product);\n  }\n\n  removeFromCart() {\n    this.cartService.removeFromCart(this.product);\n  }\n\n  getQuantity() {\n     if (!this.shoppingCart) { return 0; }\n\n     const item = this.shoppingCart.itemsMap[this.product.key];\n     return item ? item.quantity : 0;\n  }\n}\n","import { ShoppingCart } from './shopping-cart';\r\n\r\nexport class Order {\r\n    datePlaced: number;\r\n    item: any[];\r\n\r\n    constructor(public userId: string, public shipping: any, shoppingCart: ShoppingCart) {\r\n        this.datePlaced = new Date().getTime();\r\n\r\n        this.item = shoppingCart.items.map(i => {\r\n            return {\r\n              product: {\r\n                title: i.product.title,\r\n                imageUrl: i.product.imageUrl,\r\n                price: i.product.price\r\n              },\r\n              quantity: i.quantity,\r\n              totalPrice: i.totalPrice\r\n            };\r\n          });\r\n    }\r\n}\r\n","import { Product } from './product';\r\n\r\nexport class ShoppingCartItem {\r\n\r\n    constructor(public product: Product, public quantity: number) {\r\n    }\r\n\r\n    get totalPrice() { return this.product.price * this.quantity; }\r\n}\r\n","import { ShoppingCartItem } from './shopping-cart-item';\r\nimport { Product } from './product';\r\n\r\nexport class ShoppingCart {\r\n    // items: ShoppingCartItem[] = [];\r\n\r\n    // get productIds() {\r\n    //     return Object.keys(this.items);\r\n    // }\r\n    // get totalItemsCount(): number {\r\n    //     let count = 0;\r\n    //     // tslint:disable-next-line:forin prefer-const\r\n    //     for ( let productId in this.items) {          \r\n    //         count += this.items[productId].quantity;\r\n    //     }\r\n    //     return count;\r\n    // }\r\n\r\n    items: ShoppingCartItem[] = [];\r\n\r\n    \r\n    \r\n    constructor(public itemsMap: { [productId: string]: ShoppingCartItem}) {\r\n        this.itemsMap = itemsMap || {};\r\n        \r\n        // tslint:disable-next-line:forin prefer-const\r\n        for (let productId in itemsMap) {\r\n            // tslint:disable-next-line:prefer-const\r\n            let item = itemsMap[productId];\r\n            this.items.push(new ShoppingCartItem(item.product, item.quantity));\r\n        }\r\n    }\r\n\r\n    // getQuantity(product: Product) {\r\n    //     const item = this.items[product.key];\r\n    //     return item ? item.quantity : 0;\r\n    // }\r\n\r\n    get totalItemsCount(): number {\r\n        let count = 0;\r\n        // tslint:disable-next-line:forin prefer-const\r\n        for ( let productId in this.itemsMap) {          \r\n            count += this.itemsMap[productId].quantity;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    get totalPrice(): number {\r\n        let sum = 0;\r\n        // tslint:disable-next-line:forin prefer-const\r\n        for ( let productId in this.items) { \r\n            sum += this.items[productId].totalPrice;\r\n        }\r\n        return sum;\r\n\r\n    }\r\n\r\n}\r\n","import { AuthService } from 'src/app/shared/services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n  canActivate(route, state: RouterStateSnapshot) {\n    return this.auth.user$.pipe(\n      map( user => {\n        if (user) { return true; }\n  \n        this.router.navigate(['/login'], { queryParams: {returnUrl: state.url}});\n        return false;\n      })\n    );\n  }\n}\n","import { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppUser } from 'src/app/shared/models/app-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user$: Observable<firebase.User>;\n\n  constructor(\n    private userService: UserService,\n    private afAuth: AngularFireAuth, \n    private route: ActivatedRoute) { \n    this.user$ = afAuth.authState;\n  }\n\n  login() {\n    const returnUrl = this.route.snapshot.queryParamMap.get('returnUrl') || '/' ;\n    localStorage.setItem('returnUrl', returnUrl);\n\n    this.afAuth.auth.signInWithRedirect(new firebase.auth.GoogleAuthProvider());\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n\n  get appUser$(): Observable<AppUser> {\n    return this.user$.pipe(\n      switchMap(user => {\n        if (user) {\n          return this.userService.get(user.uid).valueChanges();\n        } else {\n          return of(null);\n        }\n        \n        \n      })\n    );\n  }\n}\n","import { AngularFireDatabase } from 'angularfire2/database';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { query } from '@angular/core/src/render3/query';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  getAll() {\n    return this.db.list('/categories', ref => (ref.orderByChild('name')))\n    .snapshotChanges().pipe(\n      map(actions => \n        actions.map(a => ({ key: a.key, ...a.payload.val() }))\n      )\n    );\n  }\n}\n","import { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor(\n    private shoppingCartService: ShoppingCartService,\n    private db: AngularFireDatabase) { }\n\n  async placeOrder(order) {\n    const result = await this.db.list('/orders').push(order);\n    this.shoppingCartService.clearCart();\n    return result;\n  }\n\n  getOrders() {\n    return this.db.list('/orders').valueChanges();\n  }\n\n  getOrdersByUser(userId) {\n    return this.db.list('/orders', \n    ref => ref.orderByChild('userId').equalTo(userId)).valueChanges();\n  }\n}\n","import { AngularFireDatabase } from 'angularfire2/database';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  creat(product) {\n    return this.db.list('/products').push(product);\n  }\n\n  getAll() {\n    return this.db.list('/products')\n    .snapshotChanges().pipe(\n      map(actions => \n        actions.map(a => ({ key: a.key, ...a.payload.val() }))\n      )\n    );\n  }\n\n  get(productId) {\n    return this.db.object('/products/' + productId);\n  }\n\n  update(productId, product) {\n    return this.db.object('/products/' + productId).update(product);\n  }\n\n  detele(productId) {\n    return this.db.object('/products/' + productId).remove();\n  }\n}\n","import { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { Product } from 'src/app/shared/models/product';\nimport { AngularFireDatabase } from 'angularfire2/database';\nimport { Injectable } from '@angular/core';\nimport { take, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  // async getCart(): Promise<Observable<ShoppingCart>> {\n  //   const cartId = await this.getOrCreatCartId();\n  //   return this.db.object('/shopping-carts/' + cartId).snapshotChanges().pipe(\n  //     map(x => new ShoppingCart(x.payload))\n  //   );\n  // }\n  \n  async getCart() {\n    const cartId = await this.getOrCreatCartId();\n    return this.db.object('/shopping-carts/' + cartId).snapshotChanges();\n  }\n\n  async addToCart(product: Product) {\n    // const cartId = await this.getOrCreatCartId();\n    // const item = this.getItem(cartId, product.key);\n\n    // item.snapshotChanges().pipe(take(1))\n    // .subscribe(data => {\n    //   // if (data.payload.exists()) {\n    //   //   item.update({quantity: data.payload.child('/quantity').val() + 1});\n    //   // } else {\n    //   //   item.set({product: product, quantity: 1});\n    //   // }\n    //   item.update({product: product, \n    //     quantity: (data.payload.child('/quantity').val() || 0) + 1});\n    // });\n    this.updateItemQuantity(product, 1);\n  }\n\n  async removeFromCart(product: Product) {\n    this.updateItemQuantity(product, -1);\n  }\n\n  async clearCart() {\n    // tslint:disable-next-line:prefer-const\n    let cartId = await this.getOrCreatCartId();\n    this.db.object('/shopping-carts/' + cartId + '/items').remove();\n  }\n\n  \n  private creat() {\n    return this.db.list('/shopping-carts').push({\n      dateCreated: new Date().getTime()\n    });\n  }\n\n\n  \n  \n\n  private getItem(cartId: string, productId: string) {\n    return this.db.object('/shopping-carts/' + cartId + '/items/' + productId);\n  }\n\n  private async getOrCreatCartId(): Promise<string> {\n    const cartId = localStorage.getItem('cartId');\n    if (cartId) { return cartId; }\n    \n    const result = await this.creat();\n    localStorage.setItem('cartId', result.key);\n    return result.key;\n  }\n\n  \n\n  private async updateItemQuantity(product: Product, change: number) {\n    const cartId = await this.getOrCreatCartId();\n    const item = this.getItem(cartId, product.key);\n\n    item.snapshotChanges().pipe(take(1))\n    .subscribe(data => {\n      const quantity = (data.payload.child('/quantity').val() || 0) + change ;\n      if (quantity === 0) { \n        item.remove(); \n      } else {\n        item.update({product: product, \n          quantity: quantity});\n      }\n      \n    });\n  }\n\n}\n","import { AppUser } from 'src/app/shared/models/app-user';\nimport { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireObject } from 'angularfire2/database';\nimport * as firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private db: AngularFireDatabase) { }\n\n  save(user: firebase.User) {\n    this.db.object('/users/' + user.uid).update({\n      name: user.displayName,\n      email: user.email\n    });\n  }\n\n  get(uid: string): AngularFireObject<AppUser> {\n    return this.db.object('/users/' + uid);\n  }\n}\n","import { DataTableModule } from 'angular5-data-table';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ProductCardComponent } from 'src/app/shared/components/product-card/product-card.component';\nimport { ProductQuantityComponent } from 'src/app/shared/components/product-quantity/product-quantity.component';\nimport { AuthGuard } from 'src/app/shared/services/auth-guard.service';\nimport { CategoryService } from 'src/app/shared/services/category.service';\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { UserService } from 'src/app/shared/services/user.service';\n\nimport { AuthService } from './services/auth.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    CustomFormsModule,\n    DataTableModule\n  ],\n  declarations: [\n    ProductCardComponent,\n    ProductQuantityComponent,\n  ],\n  exports: [\n    ProductCardComponent,\n    ProductQuantityComponent,\n    FormsModule,\n    CustomFormsModule,\n    DataTableModule\n  ],\n  \n  providers: [\n    AuthService,\n    AuthGuard,\n    UserService,\n    CategoryService,\n    ProductService,\n    ShoppingCartService,\n    OrderService\n  ]\n\n})\nexport class SharedModule { }\n","module.exports = \"\"","module.exports = \"\\n<h2>Shipping</h2>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n    <!-- <form #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Name</label>\\n        <input #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"shipping.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.touched && name.invalid\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">Name is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">Address</label>\\n        <input #addressLine1=\\\"ngModel\\\" name=\\\"addressLine1\\\" [(ngModel)]=\\\"shipping.addressLine1\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Line 1\\\" required>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"addressLine1.touched && addressLine1.invalid\\\">\\n          <div *ngIf=\\\"addressLine1.errors.required\\\">Address Line 1 is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\"></label>\\n        <input #addressLine2=\\\"ngModel\\\" name=\\\"addressLine2\\\" [(ngModel)]=\\\"shipping.addressLine2\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Line 2\\\" required>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"addressLine2.touched && addressLine2.invalid\\\">\\n          <div *ngIf=\\\"addressLine2.errors.required\\\">Address Line 2 is required.</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"\\\">City</label>\\n        <input #city=\\\"ngModel\\\" name=\\\"city\\\" [(ngModel)]=\\\"shipping.city\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"city.touched && city.invalid\\\">\\n          <div *ngIf=\\\"city.errors.required\\\">City is required.</div>\\n        </div>\\n      </div>\\n      <button \\n        (click)=\\\"placeOrder()\\\"\\n        class=\\\"btn btn-primary\\\">Place Order</button>\\n    </form> -->\\n  \\n    <shipping-form [cart]=\\\"cart\\\"></shipping-form>\\n  </div>\\n  <div class=\\\"col-6\\\">\\n    <shopping-cart-summary [cart]=\\\"cart\\\"></shopping-cart-summary>\\n  </div>\\n</div>\\n\"","import { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { Subscription } from 'rxjs';\nimport { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n\n@Component({\n  selector: 'app-check-out',\n  templateUrl: './check-out.component.html',\n  styleUrls: ['./check-out.component.css']\n})\nexport class CheckOutComponent implements OnInit, OnDestroy { \n  \n  cart;\n  cartSubscription: Subscription;\n  \n\n  constructor(\n    private shoppingCartService: ShoppingCartService) {}\n\n  async ngOnInit() {\n    const cart$ = await this.shoppingCartService.getCart();\n    this.cartSubscription = cart$.subscribe(cart => {\n      let temp: any;\n      temp = cart.payload.child('/items').val();\n      this.cart = new ShoppingCart(temp);\n    });\n    \n  }\n\n  ngOnDestroy() {\n    this.cartSubscription.unsubscribe();\n  }\n  \n\n}\n","module.exports = \"\"","module.exports = \"<h1>Orders</h1>\\n<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th>Customer</th>\\n      <th>Date</th>\\n      <th></th>\\n    </tr>\\n  </thead> \\n  <tbody>\\n    <tr *ngFor=\\\"let order of orders$ | async\\\">\\n      <td>{{ order.shipping.name }}</td>\\n      <td>{{ order.datePlaced | date}}</td>\\n      <td>\\n        <a href=\\\"\\\">View (inactive)</a>\\n      </td>\\n    </tr>\\n  </tbody> \\n</table>\"","import { switchMap } from 'rxjs/operators';\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent implements OnInit {\n\n  orders$;\n\n  constructor(\n    private authService: AuthService,\n    private orderService: OrderService\n  ) {\n    this.orders$ = authService.user$.pipe(\n      switchMap(u => orderService.getOrdersByUser(u.uid))\n    );\n    \n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  order-success works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-success',\n  templateUrl: './order-success.component.html',\n  styleUrls: ['./order-success.component.css']\n})\nexport class OrderSuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.sticky-top {\\r\\n    top: 80px;\\r\\n}\"","module.exports = \"<div class=\\\"sticky-top\\\">\\n  <div class=\\\"list-group\\\">\\n    <a\\n      routerLink = \\\"/\\\"\\n      class=\\\"list-group-item list-group-item-action\\\" \\n      [class.active]= \\\"(!category)\\\" >\\n      All Categories\\n    </a>\\n    <a *ngFor=\\\"let c of categories$ | async\\\" \\n        routerLink = \\\"/\\\"\\n        [queryParams]=\\\"{ category: c.key}\\\"\\n        class=\\\"list-group-item list-group-item-action\\\"\\n        [class.active]= \\\"(category === c.key)\\\">\\n      {{c.name}}\\n    </a>\\n  </div>\\n</div>\\n\"","import { CategoryService } from 'src/app/shared/services/category.service';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'product-filter',\n  templateUrl: './product-filter.component.html',\n  styleUrls: ['./product-filter.component.css']\n})\nexport class ProductFilterComponent implements OnInit {\n  categories$;\n  @Input('category') category;\n\n  constructor(categoryService: CategoryService) { \n    this.categories$ = categoryService.getAll();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-3\\\">\\n    <product-filter [category]=\\\"category\\\"></product-filter>\\n  </div>\\n  <div class=\\\"col\\\">\\n    <div class=\\\"row\\\">\\n        <ng-container *ngFor=\\\"let p of filteredProducts; let i = index\\\">\\n          <div class=\\\"col\\\">\\n              <product-card [product]=\\\"p\\\" [shopping-cart]=\\\"cart\\\"></product-card>\\n          </div>\\n          <div *ngIf=\\\"(i+1) % 2 === 0\\\" class=\\\"w-100\\\"></div>\\n        </ng-container>\\n      </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\"","import { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { switchMap } from 'rxjs/operators';\nimport { Product } from 'src/app/shared/models/product';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit, OnDestroy {\n\n  products: Product[] = [];\n  filteredProducts: Product[];\n  cart: ShoppingCart;\n  category: string;\n  subscription: Subscription;\n\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService,\n    private shoppingCartService: ShoppingCartService\n  ) {}\n\n  async ngOnInit() {\n    this.subscription = (await this.shoppingCartService.getCart())\n    .subscribe(cart => {\n      let temp: any;\n      temp = cart.payload.child('/items').val();\n      this.cart = new ShoppingCart(temp);\n      // this.cart = temp;\n      // console.log(this.cart);\n    });\n\n  this.productService.getAll()\n  .pipe(switchMap( products => {\n    let temp: any[];\n    temp = products;\n    this.products = temp; \n    return this.route.queryParamMap;\n    }))\n    .subscribe(params => {\n      this.category = params.get('category');\n\n      this.filteredProducts = (this.category) ?\n        this.products.filter(p => p.category === this.category) : \n        this.products;\n    }); \n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  // constructor(\n  //   route: ActivatedRoute,\n  //   productService: ProductService, \n  //   categoryService: CategoryService) {\n  //   productService.getAll().subscribe(products => {\n  //     let temp: any[];\n  //     temp = products;\n  //     this.products = temp;\n\n  //     route.queryParamMap.subscribe(params => {\n  //       this.category = params.get('category');\n  \n  //       this.filteredProducts = (this.category) ?\n  //         this.products.filter(p => p.category === this.category) : \n  //         this.products;\n  //     });\n\n  //   });\n\n  //   this.categories$ = categoryService.getAll();\n  // }\n\n}\n","module.exports = \"\"","module.exports = \"<form #f=\\\"ngForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\">Name</label>\\n    <input #name=\\\"ngModel\\\" name=\\\"name\\\" [(ngModel)]=\\\"shipping.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.touched && name.invalid\\\">\\n      <div *ngIf=\\\"name.errors.required\\\">Name is required.</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\">Address</label>\\n    <input #addressLine1=\\\"ngModel\\\" name=\\\"addressLine1\\\" [(ngModel)]=\\\"shipping.addressLine1\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Line 1\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"addressLine1.touched && addressLine1.invalid\\\">\\n      <div *ngIf=\\\"addressLine1.errors.required\\\">Address Line 1 is required.</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\"></label>\\n    <input #addressLine2=\\\"ngModel\\\" name=\\\"addressLine2\\\" [(ngModel)]=\\\"shipping.addressLine2\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Line 2\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"addressLine2.touched && addressLine2.invalid\\\">\\n      <div *ngIf=\\\"addressLine2.errors.required\\\">Address Line 2 is required.</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"\\\">City</label>\\n    <input #city=\\\"ngModel\\\" name=\\\"city\\\" [(ngModel)]=\\\"shipping.city\\\" type=\\\"text\\\" class=\\\"form-control\\\" required>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"city.touched && city.invalid\\\">\\n      <div *ngIf=\\\"city.errors.required\\\">City is required.</div>\\n    </div>\\n  </div>\\n  <button \\n    [disabled]=\\\"!f.valid\\\"\\n    (click)=\\\"placeOrder()\\\"\\n    class=\\\"btn btn-primary\\\">Place Order</button>\\n</form>\\n\"","import { AuthService } from 'src/app/shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy, Input } from '@angular/core';\n\nimport { OrderService } from 'src/app/shared/services/order.service';\nimport { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { Order } from 'src/app/shared/models/order';\n\n\n@Component({\n  selector: 'shipping-form',\n  templateUrl: './shipping-form.component.html',\n  styleUrls: ['./shipping-form.component.css']\n})\nexport class ShippingFormComponent implements OnInit, OnDestroy {\n  @Input('cart') cart: ShoppingCart;\n  shipping = {}; \n  userSubscription: Subscription;\n  userId;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private orderService: OrderService) {}\n\n  ngOnInit() {\n    this.userSubscription = \n    this.authService.user$.subscribe(user => this.userId = user.uid);\n  }\n\n  ngOnDestroy() {\n    this.userSubscription.unsubscribe();\n  }\n\n  async placeOrder() {\n    // tslint:disable-next-line:prefer-const\n    let order = new Order(this.userId, this.shipping, this.cart);\n    const result = await this.orderService.placeOrder(order);\n    // console.log(order);\n    this.router.navigate(['/order-success', result.key]);\n  }    \n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"cart\\\" class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">Order Summary</h5>\\n    <p class=\\\"card-text\\\">You have {{ cart.totalItemsCount }} items in your shopping cart</p>\\n    <ul class=\\\"list-group list-group-flush\\\">\\n      <li *ngFor=\\\"let item of cart.items\\\" class=\\\"list-group-item\\\">\\n        {{ item.quantity }} x {{ item.product.title }}\\n        <div class=\\\"float-right\\\">\\n          {{ item.totalPrice | currency:'SGD':symbol }}\\n        </div>\\n      </li>\\n      <li class=\\\"list-group-item font-weight-bold\\\">\\n        Total\\n        <div class=\\\"float-right\\\">\\n          {{ cart.totalPrice | currency:'SGD':symbol }}\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ShoppingCart } from 'src/app/shared/models/shopping-cart';\n\n@Component({\n  selector: 'shopping-cart-summary',\n  templateUrl: './shopping-cart-summary.component.html',\n  styleUrls: ['./shopping-cart-summary.component.css']\n})\nexport class ShoppingCartSummaryComponent implements OnInit {\n  \n  @Input('cart') cart: ShoppingCart;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n.thumbnail {\\r\\n    width: 80px;\\r\\n    height: 80px;\\r\\n    border-radius: 100%;\\r\\n    background-size: cover;\\r\\n}\"","module.exports = \"<h1>Shopping Cart</h1>\\n<div class=\\\"row col-10\\\">\\n  <p>\\n      You have {{cart.totalItemsCount}} items in your shopping cart.\\n      <button\\n      *ngIf = \\\"cart.items.length\\\"\\n      (click)=\\\"clearCart()\\\"\\n      class=\\\"btn btn-sm\\\">Clear Shopping Cart</button>\\n  </p>\\n  <table class=\\\"table\\\">\\n    <thead>\\n      <tr>\\n        <th></th>\\n        <th>Product</th>\\n        <th class=\\\"text-center\\\" style=\\\"width: 230px\\\">Quantity</th>\\n        <th class=\\\"text-right\\\" style=\\\"width: 200px\\\">Price</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let item of cart.items\\\">\\n        <td>\\n          <div [style.backgroundImage]=\\\"'url(' + item.product.imageUrl + ')'\\\" class=\\\"thumbnail\\\" alt=\\\"\\\"></div>\\n        </td>\\n        <td>\\n          {{ item.product.title}}\\n        </td>\\n        <td>\\n            <!-- {{ item.quantity}}  -->\\n\\n            <div class=\\\"row no-gutters\\\">\\n              <div class=\\\"col-2\\\">\\n                <button\\n                  (click)=\\\"removeFromCart(item.product)\\\" \\n                  class=\\\"btn btn-secondary btn-block\\\">-</button>\\n              </div>\\n              <div class=\\\"col text-center\\\">{{ getQuantity(item.product) }} in cart </div>\\n              <div class=\\\"col-2\\\">\\n                  <button \\n                    (click)=\\\"addToCart(item.product)\\\"\\n                    class=\\\"btn btn-secondary btn-block\\\">+</button>\\n              </div>\\n            </div>\\n\\n            <!-- <product-quantity [shopping-cart]=\\\"cart\\\" [product]=\\\"item.product\\\"></product-quantity> -->\\n        </td>\\n        <td class=\\\"text-right\\\">\\n          {{ item.totalPrice | currency:'SGD':symbol}}\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <th></th>\\n        <th></th>\\n        <th></th>\\n        <th class=\\\"text-right\\\">{{cart.totalPrice | currency:'SGD':symbol}}</th>\\n      </tr>\\n    </tfoot>\\n  </table>\\n  <a \\n    *ngIf = \\\"cart.items.length\\\"\\n    routerLink=\\\"/check-out\\\"\\n    class=\\\"btn btn-primary\\\">Check Out</a>\\n  \\n</div>\\n\\n\"","import { Product } from 'src/app/shared/models/product';\nimport { ShoppingCart } from 'src/app/shared/models/shopping-cart';\nimport { Subscription } from 'rxjs';\nimport { ShoppingCartService } from 'src/app/shared/services/shopping-cart.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit {\n\n  cart: ShoppingCart = new ShoppingCart(null);\n  shoppingCartItemCount: number;\n  // product: Product;\n  shoppingCart: ShoppingCart;\n  \n  constructor(private shoppingCartService: ShoppingCartService) { }\n\n  addToCart(product: Product) {\n    this.shoppingCartService.addToCart(product);\n  }\n\n  removeFromCart(product: Product) {\n    this.shoppingCartService.removeFromCart(product);\n  }\n\n  getQuantity(product: Product) {\n    if (!this.cart) { return 0; }\n\n    const item = this.cart.itemsMap[product.key];\n    // console.log(this.cart.items);\n    return item ? item.quantity : 0;\n  }\n\n  clearCart() {\n    this.shoppingCartService.clearCart();\n  }\n  \n  async ngOnInit() {\n    const cart$ = await this.shoppingCartService.getCart();\n    cart$.subscribe( temp => {\n      // tslint:disable-next-line:prefer-const\n      let data: any;    \n      data = temp.payload.child('/items').val();\n      // data = temp.payload.val();\n      this.cart = new ShoppingCart(data);\n      this.shoppingCartItemCount = this.cart.totalItemsCount;\n      // console.log('data', data);\n      \n    });\n  }\n\n}\n","import { RouterModule } from '@angular/router';\nimport { SharedModule } from './../shared/shared.module';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\nimport { CheckOutComponent } from './components/check-out/check-out.component';\nimport { OrderSuccessComponent } from './components/order-success/order-success.component';\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\nimport { ProductFilterComponent } from './components/products/product-filter/product-filter.component';\nimport { ShoppingCartSummaryComponent } from './components/shopping-cart-summary/shopping-cart-summary.component';\nimport { ShippingFormComponent } from './components/shipping-form/shipping-form.component';\nimport { AuthGuard } from 'src/app/shared/services/auth-guard.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    RouterModule.forChild([\n      { path: 'products', component: ProductsComponent },\n      { path: 'shopping-cart', component: ShoppingCartComponent },\n      { path: 'check-out', component: CheckOutComponent, canActivate: [AuthGuard] },\n      { path: 'order-success/:id', component: OrderSuccessComponent, canActivate: [AuthGuard] },\n      { path: 'my/orders', component: MyOrdersComponent, canActivate: [AuthGuard] },\n    ])\n  ],\n  declarations: [\n    ProductsComponent,\n    ShoppingCartComponent,\n    CheckOutComponent,\n    OrderSuccessComponent,\n    MyOrdersComponent,\n    ProductFilterComponent,\n    ShoppingCartSummaryComponent,\n    ShippingFormComponent\n  ]\n})\nexport class ShoppingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyCuwbndUZSktCKA2ONcWLedqhmEQzI0A7U\",\n    authDomain: \"myshop-60486.firebaseapp.com\",\n    databaseURL: \"https://myshop-60486.firebaseio.com\",\n    projectId: \"myshop-60486\",\n    storageBucket: \"myshop-60486.appspot.com\",\n    messagingSenderId: \"138616684787\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}